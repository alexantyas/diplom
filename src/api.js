import axios from 'axios';

const api = axios.create({
  baseURL: 'http://localhost:8000', // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ CORS —Ä–∞–∑—Ä–µ—à—ë–Ω –Ω–∞ –±—ç–∫–µ
});

// üîí –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∫–æ –≤—Å–µ–º –∑–∞–ø—Ä–æ—Å–∞–º, –∫—Ä–æ–º–µ /auth/token
api.interceptors.request.use(config => {
  if (!config.url.endsWith('/auth/token')) {
    const token = localStorage.getItem('access_token') || localStorage.getItem('token');
    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }
  }
  return config;
});

// üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
export async function loginUser(username, password) {
  return api.post(
    '/auth/token',
    new URLSearchParams({ username, password }),
    { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }
  );
}

// üë§ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function getProfile() {
  return api.get('/users/me');
}

// üì• –ü–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–∫–∏ (–æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ)
export function getApprovedApplications(competitionId) {
  return api.get('/applications/', {
    params: { competition_id: competitionId }
  });
}

// üì• –ü–æ–ª—É—á–∏—Ç—å –º–∞—Ç—á–∏ –ø–æ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—é
export function getMatchesByCompetition(compId) {
  return api.get('/matches/', {
    params: { competition_id: compId }
  });
}

// PATCH –æ–¥–Ω–æ–≥–æ –º–∞—Ç—á–∞
export function patchMatch(id, data) {
  return api.patch(`/matches/${id}`, data);
}

// üì¶ –ü–∞–∫–µ—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç—á–µ–π
export function createMatchesBatch(matches) {
  return api.post('/matches/batch', matches);
}

// GET –±—Ä—ç–∫–µ—Ç —Ç—É—Ä–Ω–∏—Ä–∞
export function getBracket(compId) {
  return api.get(`/competitions/${compId}/bracket`);
}

// POST —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –±—Ä—ç–∫–µ—Ç–∞
export function postBracketResults(compId, payload) {
  return api.post(`/competitions/${compId}/bracket`, payload);
}

// üì§ –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ (PUT)
export function updateCompetition(id, data) {
  return api.put(`/competitions/${id}`, data);
}

// ‚ùå –£–¥–∞–ª–∏—Ç—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ (DELETE)
export function deleteCompetition(id) {
  return api.delete(`/competitions/${id}`);
}

// üì• –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è
export function getCompetitions() {
  return api.get('/competitions/');
}

// üì• –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏
export function getAllApplications() {
  return api.get('/applications/');
}

export default api;
